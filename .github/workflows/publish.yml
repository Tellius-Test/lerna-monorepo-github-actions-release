name: publish

on:
  # When Release Pull Request is merged
  pull_request:
    branches:
      - master
    types: [closed]


jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install project dependencies
        run: pnpm install

      - name: Set Current Version
        run: |
          CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

      - name: Set Custom Registry Auth
        run: npm config set auth $NPM_AUTH_TOKEN
        env:
          NPM_AUTH_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
      
      - name: Check auth
        run: echo "$NPM_AUTH_TOKEN"
        env:
          NPM_AUTH_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}


      - name: Set Custom Registry
        run: npm config set registry http://ec2-3-237-17-174.compute-1.amazonaws.com:8081/repository/npm-private/
        env:
          NPM_AUTH_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}

      - name: Authenticate with Nexus Sonatype
        run: echo "//ec2-3-237-17-174.compute-1.amazonaws.com:8081/repository/npm-private/:_authToken=$NPM_AUTH_TOKEN" >> ~/.npmrc
        env:
          NPM_AUTH_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}

      - name: Tag Check
        id: tag_check
        run: |
          GET_API_URL="https://api.github.com/repos/${{ github.repository }}/git/ref/tags/v${{ env.CURRENT_VERSION }}"
          http_status_code=$(curl -LI "$GET_API_URL" -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}")
          if [ "$http_status_code" -ne "404" ] ; then
            echo "::set-output name=exists_tag::true"
          else
            echo "::set-output name=exists_tag::false"
          fi

      - name: Create Git Tag
        if: steps.tag_check.outputs.exists_tag == 'false'
        uses: pkgdeps/git-tag-action@v2
        with:
          version: ${{ env.CURRENT_VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"

      - name: Create Release
        id: create_release
        if: steps.tag_check.outputs.exists_tag == 'false' && github.event.pull_request.merged == true
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.CURRENT_VERSION }}"
          release_name: ${{ github.event.pull_request.title }}
          body: ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false

      - name: Publish packages to Sonatype
        run: lerna publish from-package --yes
        env:
          CI: true

      - name: Notify Release
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'https://github.com/${{ github.repository }}/releases/tag/v${{ env.CURRENT_VERSION }} is released ðŸŽ‰'
            })
